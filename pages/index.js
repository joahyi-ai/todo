import Head from "next/head";
import TodoList from "@/components/TodoList";
import { useEffect, useRef, useState } from "react";
import { v4 as uuidv4 } from "uuid";

const LOCAL_STORAGE_KEY = "todoApp.todos";

export default function Home() {
  const todoNameRef = useRef();
  const initialRender = useRef(true);
  const [todo, setTodo] = useState([]);
  useEffect(() => {
    const storedTodo = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));
    if (storedTodo) {
      setTodo(storedTodo);
    }
  }, []);

  useEffect(() => {
    if (initialRender.current) {
      initialRender.current = false;
      return;
    }
    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todo));
  }, [todo]);

  function toggleTodo(id) {
    const newTodo = [...todo];

    const todos = newTodo.find((todo) => todo.id === id);
    todos.complete = !todos.complete;
    setTodo(newTodo);
  }

  function handleAddTodo(e) {
    const name = todoNameRef.current.value;
    if (name) {
      setTodo((prevTodo) => {
        return [...prevTodo, { id: uuidv4(), name: name, complete: false }];
      });
      todoNameRef.current.value = null;
    } else {
      return;
    }
  }

  function handleClearTodos() {
    const newTodos = todo.filter((todo) => todo.complete == false);
    setTodo(newTodos);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section className="section">
          <div className="container">
            {/* TodoList */}
            <TodoList todo={todo} toggleTodo={toggleTodo} />
            {/* Input */}
            <div className="columns">
              <div className="column is-10">
                <input
                  className="input is-primary "
                  type="text"
                  placeholder="Todo"
                  ref={todoNameRef}
                ></input>
              </div>
              {/* AddTodo */}
              <div className="column">
                <button onClick={handleAddTodo} className="button is-primary">
                  Add Todo
                </button>
              </div>
              {/* Clear Todo */}
              <div className="column">
                <button
                  onClick={handleClearTodos}
                  className="button is-primary"
                >
                  Clear Todo
                </button>
              </div>
            </div>
            {/* Show LeftTodo */}
            <div className="subtitle">
              {todo.filter((todo) => !todo.complete).length} left to do
            </div>
          </div>
        </section>
      </main>
    </>
  );
}
